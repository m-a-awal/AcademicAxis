{"ast":null,"code":"import axios from \"axios\";\nconst host = \"http://localhost:3000/\";\nvar url;\nexport async function getSubjectDetails(tid, token) {\n  url = host + \"subjectDetails/\" + tid;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    }); //console.log(response.data)\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getTestDetails(sid, token) {\n  url = host + \"test/\" + sid;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    }); //console.log(response.data)\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getStudentMarkDetails(tid, sid, cid, token) {\n  url = host + \"marks/?sid=\" + sid + \"&tid=\" + tid + \"&cid=\" + cid;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    }); //console.log(response.data)\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function updateResult(data, token) {\n  url = host + \"uploadResult/\";\n\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function createNewTest(test, token) {\n  url = host + \"test/\";\n\n  try {\n    const response = await axios.post(url, test, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function updateATest(testObj, token) {\n  url = host + \"test/\" + testObj.tid;\n\n  try {\n    const response = await axios.put(url, testObj, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(\"Error Res: \" + error);\n  }\n}\nexport async function deleteATest(tid, token) {\n  url = host + \"test/\" + tid; //debugger\n\n  try {\n    const response = await axios.delete(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function checkResultID(data, token) {\n  url = host + \"checkResId/?tid=\" + data.tid + \"&sid=\" + data.sid + \"&uid=\" + data.uid;\n\n  try {\n    const response = await axios.get(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function uploadResult(data, token) {\n  url = host + \"uploadResult/\";\n\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getAvgMark(sid, cid, token) {\n  url = host + \"subjects/avgGrade/\" + sid + \"/\" + cid;\n\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/AcademicAxis/App/frontend/src/api/TeacherAPI.js"],"names":["axios","host","url","getSubjectDetails","tid","token","response","get","headers","data","error","console","log","getTestDetails","sid","getStudentMarkDetails","cid","updateResult","post","createNewTest","test","updateATest","testObj","put","deleteATest","delete","checkResultID","uid","uploadResult","getAvgMark"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst host = \"http://localhost:3000/\";\nvar url;\n\nexport async function getSubjectDetails(tid, token) {\n  url = host + \"subjectDetails/\" + tid;\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    //console.log(response.data)\n    return response.data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getTestDetails(sid, token) {\n  url = host + \"test/\" + sid;\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    //console.log(response.data)\n    return response.data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getStudentMarkDetails(tid, sid, cid, token) {\n  url = host + \"marks/?sid=\" + sid + \"&tid=\" + tid +\"&cid=\"+cid;\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    //console.log(response.data)\n    return response.data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function updateResult(data, token) {\n  url = host + \"uploadResult/\";\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function createNewTest(test, token) {\n  url = host + \"test/\";\n  try {\n    const response = await axios.post(url, test, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function updateATest(testObj, token) {\n  url = host + \"test/\" + testObj.tid;\n\n  try {\n    const response = await axios.put(url, testObj, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data\n  } catch (error) {\n    console.log(\"Error Res: \" + error)\n  }\n}\n\n\nexport async function deleteATest(tid, token) {\n  url = host + \"test/\" + tid;\n  //debugger\n  try {\n    const response = await axios.delete(url, {\n      headers: {\n        'Authorization': token\n      }\n    })\n\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function checkResultID(data, token) {\n  url = host + \"checkResId/?tid=\" + data.tid + \"&sid=\" + data.sid + \"&uid=\" + data.uid;\n\n  try {\n    const response = await axios.get(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n\n    console.log(response.data)\n    return response.data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function uploadResult(data, token) {\n  url = host + \"uploadResult/\";\n\n  try {\n    const response = await axios.post(url, data, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function getAvgMark(sid, cid, token) {\n  url = host + \"subjects/avgGrade/\" + sid +\"/\"+cid;\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': token\n      }\n    });\n    return response.data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}